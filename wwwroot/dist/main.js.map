{"version":3,"sources":["./src/$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/core/core.module.ts","./src/app/core/guards/authentication.guard.ts","./src/app/core/services/application.service.ts","./src/app/core/services/http-request-interceptor.ts","./src/app/core/services/security.service.ts","./src/app/core/services/token.service.ts","./src/app/counter/counter.component.html","./src/app/counter/counter.component.ts","./src/app/fetch-data/fetch-data.component.html","./src/app/fetch-data/fetch-data.component.ts","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/app/movie-details/movie-details.component.html","./src/app/movie-details/movie-details.component.ts","./src/app/nav-menu/nav-menu.component.html","./src/app/nav-menu/nav-menu.component.ts","./src/app/registration/registration.component.html","./src/app/registration/registration.component.ts","./src/app/shared/angular-material.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./comments/comments.module.ngfactory\": [\n\t\t\"./src/app/comments/comments.module.ngfactory.js\",\n\t\t\"default~comments-comments-module-ngfactory~movies-movies-module-ngfactory\",\n\t\t\"comments-comments-module-ngfactory\"\n\t],\n\t\"./movies/movies.module.ngfactory\": [\n\t\t\"./src/app/movies/movies.module.ngfactory.js\",\n\t\t\"default~comments-comments-module-ngfactory~movies-movies-module-ngfactory\",\n\t\t\"movies-movies-module-ngfactory\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","<body>\r\n  <app-nav-menu></app-nav-menu>\r\n  <div class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</body>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AngularMaterialModule } from './shared/angular-material.module';\r\n\r\nimport { CoreModule } from './core/core.module'\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CounterComponent } from './counter/counter.component';\r\nimport { FetchDataComponent } from './fetch-data/fetch-data.component';\r\nimport { MovieDetailsComponent } from './movie-details/movie-details.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { RegistrationComponent } from './registration/registration.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst routes: Routes = [\r\n    { path: 'login', component: LoginComponent },\r\n    { path: 'register', component: RegistrationComponent },\r\n\r\n    { path: 'movies', loadChildren: './movies/movies.module#MoviesModule' },\r\n\r\n    { path: 'comments', loadChildren: './comments/comments.module#CommentsModule' },\r\n\r\n    { path: 'fetch-data/:movieId', loadChildren: './movies/movies.module#MoviesModule' },\r\n\r\n    { path: '', component: HomeComponent, pathMatch: 'full' },\r\n    { path: 'counter', component: CounterComponent },\r\n    { path: 'fetch-data', component: FetchDataComponent },\r\n    { path: 'fetch-data/:movieId', component: MovieDetailsComponent },\r\n    { path: 'my-route', component: CounterComponent },\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        NavMenuComponent,\r\n        HomeComponent,\r\n        CounterComponent,\r\n        FetchDataComponent,\r\n        MovieDetailsComponent,\r\n        RegistrationComponent,\r\n        LoginComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule.withServerTransition({ appId: 'ng-cli-universal' }),\r\n        HttpClientModule,\r\n        FormsModule,\r\n        RouterModule.forRoot(routes),\r\n        AngularMaterialModule,\r\n        CoreModule,\r\n        BrowserAnimationsModule\r\n    ],\r\n    exports: [AngularMaterialModule, CoreModule],\r\n    providers: [],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AuthenticationGuard } from './guards/authentication.guard';\r\n\r\nimport { HttpRequestInterceptor } from './services/http-request-interceptor';\r\n\r\nimport { SecurityService } from './services/security.service';\r\nimport { TokenService } from './services/token.service';\r\nimport { ApplicationService } from './services/application.service';\r\n\r\n@NgModule({\r\n    declarations: [\r\n    ],\r\n    imports: [],\r\n    providers: [\r\n        AuthenticationGuard,\r\n        SecurityService,\r\n        TokenService,\r\n        ApplicationService,\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: HttpRequestInterceptor,\r\n            multi: true\r\n        }\r\n    ],\r\n    exports: []\r\n})\r\n\r\nexport class CoreModule {\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthenticationGuard implements CanActivate {\r\n    constructor() { }\r\n\r\n    canActivate() {\r\n        return true;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TokenService } from './token.service';\r\n\r\n@Injectable()\r\nexport class ApplicationService {\r\n\r\n    public baseUrl: string;\r\n\r\n    constructor(private tokenService: TokenService) {\r\n        this.baseUrl = document.getElementsByTagName('base')[0].href;\r\n    }\r\n\r\n    isLoggedIn() {\r\n        return this.tokenService.getToken() != null;\r\n    }\r\n\r\n    userEmail() {\r\n        var token = this.tokenService.getToken();\r\n\r\n        if (token != null)\r\n            return token.email;\r\n\r\n        return \"\";\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpRequest, HttpErrorResponse, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { empty, Observable, throwError, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { TokenService } from './token.service';\r\nimport { Token } from './security.models';\r\n\r\n@Injectable()\r\nexport class HttpRequestInterceptor implements HttpInterceptor {\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private tokenService: TokenService\r\n    ) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        var token: Token = this.tokenService.getToken();\r\n\r\n        request = token ? request.clone(\r\n            {\r\n                headers: request.headers.set(\"Authorization\", \"Bearer \" + token.value)\r\n            }\r\n        ) : request;\r\n\r\n        return next.handle(request).pipe(\r\n            catchError(\r\n                (error: HttpErrorResponse, caught: Observable<HttpEvent<HttpErrorResponse>>) => {\r\n\r\n                    if (error.status === 401) {\r\n                        this.router.navigate(['/login']);\r\n                        return of<HttpEvent<HttpErrorResponse>>();\r\n                    }\r\n\r\n                    if (error.status === 403) {\r\n                        this.router.navigate(['/forbidden']);\r\n                        return of<HttpEvent<HttpErrorResponse>>();\r\n                    }\r\n                    return throwError(error);\r\n                }\r\n            )\r\n        );\r\n    }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observer, Observable } from 'rxjs';\r\n\r\nimport { Token, RegisterModel, LoginModel } from './security.models';\r\nimport { TokenService } from './token.service';\r\nimport { ApplicationService } from './application.service';\r\n\r\n@Injectable()\r\nexport class SecurityService {\r\n\r\n    constructor(\r\n        private httpClient: HttpClient,\r\n        private tokenService: TokenService,\r\n        private applicationService: ApplicationService) {\r\n    }\r\n\r\n    register(registerModel: RegisterModel) {\r\n        return new Observable<Token>((obs: Observer<Token>) => {\r\n            this.httpClient.post<Token>(`${this.applicationService.baseUrl}Account/Register`, registerModel).subscribe(token => {\r\n\r\n                this.tokenService.saveToken(token);\r\n\r\n                obs.next(token);\r\n                obs.complete();\r\n            });\r\n        });\r\n    }\r\n\r\n    login(loginModel: LoginModel) {\r\n        return new Observable<Token>((obs: Observer<Token>) => {\r\n            this.httpClient.post<Token>(`${this.applicationService.baseUrl}Account/Login`, loginModel).subscribe(token => {\r\n\r\n                this.tokenService.saveToken(token);\r\n\r\n                obs.next(token);\r\n                obs.complete();\r\n            });\r\n        });\r\n    }\r\n\r\n    logout() {\r\n        this.tokenService.deleteToken();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Token } from './security.models';\r\n\r\n@Injectable()\r\nexport class TokenService {\r\n\r\n    constructor() { }\r\n\r\n    saveToken(token: Token) {\r\n        localStorage.setItem(\"token\", JSON.stringify(token));\r\n    }\r\n\r\n    getToken(): Token | null {\r\n        return this.validate(JSON.parse(localStorage.getItem(\"token\") as string));\r\n    }\r\n\r\n    validate(token: Token | null): Token | null {\r\n        if (token) {\r\n            if (new Date(token.expiry) > new Date())\r\n                return token;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    deleteToken() {\r\n        localStorage.removeItem(\"token\");\r\n    }\r\n}\r\n","<h1>Counter</h1>\r\n\r\n<p>This is a simple example of an Angular component.</p>\r\n\r\n<p aria-live=\"polite\">Current count: <strong>{{ currentCount }}</strong></p>\r\n\r\n<button class=\"btn btn-primary\" (click)=\"incrementCounter()\">Increment</button>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html'\r\n})\r\nexport class CounterComponent {\r\n  public currentCount = 0;\r\n\r\n  public incrementCounter() {\r\n    this.currentCount++;\r\n  }\r\n}\r\n","<h1 id=\"tableLabel\">Weather forecast</h1>\r\n\r\n<p>This component demonstrates fetching data from the server.</p>\r\n\r\n<p *ngIf=\"!movies\"><em>Loading...</em></p>\r\n\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"movies\">\r\n    <thead>\r\n        <tr>\r\n            <th>Title</th>\r\n            <th>Description</th>\r\n            <th>MovieUpKeepGenre</th>\r\n            <th>DurationInMin</th>\r\n            <th>YearofRelease</th>\r\n            <th>Director</th>\r\n            <th>DateAdded</th>\r\n            <th>Rating</th>\r\n            <th>WasWatched</th>\r\n            <th>Comments</th>\r\n            <th>Operations</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let movie of movies\">\r\n            <td>{{ movie.title }}</td>\r\n            <td>{{ movie.description }}</td>\r\n            <td>{{ movie.movieUpKeepGenre }}</td>\r\n            <td>{{ movie.durationInMin }}</td>\r\n            <td>{{ movie.yearOfRelease }}</td>\r\n            <td>{{ movie.director }}</td>\r\n            <td>{{ movie.dateAdded }}</td>\r\n            <td>{{ movie.rating}}</td>\r\n            <td>{{ movie.wasWatched}}</td>\r\n            <td>{{ movie.numberOfComments}}</td>\r\n            <td>\r\n                <a class=\"btn btn-primary\" [routerLink]=\"['/fetch-data', movie.id]\" routerLinkActive=\"active\">Details </a> |\r\n                <a class=\"btn btn-info\">Edit</a> |\r\n                <a class=\"btn btn-danger\" (click)=\"delete(movie.id)\">Delete</a>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n\r\n<p>Add a movie</p>\r\n\r\n\r\n<input [(ngModel)]=\"name\" />\r\n\r\n<p>{{name}}</p>\r\n\r\n<button (click)=\"submit()\">Submit!</button>\r\n\r\n\r\n<input type=\"date\" />\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n    selector: 'app-fetch-data',\r\n    templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n    public movies: Movie[];\r\n\r\n    public name: string = \"test\";\r\n\r\n    constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string) {\r\n        this.loadMovies();\r\n    }\r\n\r\n\r\n    loadMovies() {\r\n        this.http.get<Movie[]>(this.baseUrl + 'api/Movies').subscribe(result => {\r\n            this.movies = result;\r\n            console.log(this.movies);\r\n        }, error => console.error(error))\r\n    };\r\n\r\n    delete(movieId: string) {\r\n        if (confirm('Are you sure you want to delete the movie with id ' + movieId + '?')) {\r\n            this.http.delete(this.baseUrl + 'api/Movies/' + movieId)\r\n                .subscribe\r\n                (\r\n                    result => {\r\n                        alert('Movie successfully deleted!');\r\n                        this.loadMovies();\r\n                    },\r\n                    error => alert('Cannot delete movie - maybe it has comments?')\r\n                )\r\n        }\r\n    }\r\n\r\n    submit() {\r\n\r\n        var movie: Movie = <Movie>{};\r\n        movie.Title = this.name;\r\n        movie.Description = this.name;\r\n        movie.MovieUpKeepGenre = MovieUpKeepGenre.Comedy;\r\n        movie.DurationInMin = 80;\r\n        movie.YearOfRelease = 2005;\r\n        movie.Director = this.name;\r\n        movie.DateAdded = new Date();\r\n        movie.Rating = 6;\r\n        movie.WasWatched = true;\r\n    \r\n     \r\n\r\n        this.http.post(this.baseUrl + 'api/Movies', movie).subscribe(result => {\r\n            console.log('success!');\r\n            this.loadMovies();\r\n        },\r\n            error => {\r\n                if (error.status == 400) {\r\n                    console.log(error.error.errors)\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n\r\n\r\ninterface Movie {\r\n    Id: number;\r\n    Title: string;\r\n    Description: string;\r\n   MovieUpKeepGenre: MovieUpKeepGenre;\r\n   DurationInMin: number;\r\n   YearOfRelease: number;\r\n    Director: string;\r\n    DateAdded: Date;\r\n     Rating: number;\r\n    WasWatched: boolean;\r\n}\r\nenum MovieUpKeepGenre\r\n{\r\n    Action,\r\n    Comedy,\r\n    Horror,\r\n    Thriller \r\n}\r\n\r\n\r\n","<h1>Hello, world</h1>\r\n<p>Welcome to your new single-page application, built with:</p>\r\n<ul>\r\n  <li><a href='https://get.asp.net/'>ASP.NET Core</a> and <a href='https://msdn.microsoft.com/en-us/library/67ef8sbd.aspx'>C#</a> for cross-platform server-side code</li>\r\n  <li><a href='https://angular.io/'>Angular</a> and <a href='http://www.typescriptlang.org/'>TypeScript</a> for client-side code</li>\r\n  <li><a href='http://getbootstrap.com/'>Bootstrap</a> for layout and styling</li>\r\n</ul>\r\n<p>To help you get started, we've also set up:</p>\r\n<ul>\r\n  <li><strong>Client-side navigation</strong>. For example, click <em>Counter</em> then <em>Back</em> to return here.</li>\r\n  <li><strong>Angular CLI integration</strong>. In development mode, there's no need to run <code>ng serve</code>. It runs in the background automatically, so your client-side resources are dynamically built on demand and the page refreshes when you modify any file.</li>\r\n  <li><strong>Efficient production builds</strong>. In production mode, development-time features are disabled, and your <code>dotnet publish</code> configuration automatically invokes <code>ng build</code> to produce minified, ahead-of-time compiled JavaScript files.</li>\r\n</ul>\r\n<p>The <code>ClientApp</code> subdirectory is a standard Angular CLI application. If you open a command prompt in that directory, you can run any <code>ng</code> command (e.g., <code>ng test</code>), or use <code>npm</code> to install extra packages into it.</p>\r\n\r\n<mat-slide-toggle> Slide me! </mat-slide-toggle>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent {\r\n}\r\n","<mat-card>\r\n    <mat-card-header>\r\n        <mat-card-title>Log in</mat-card-title>\r\n    </mat-card-header>\r\n\r\n    <form class=\"example-form\">\r\n        <mat-card-content>\r\n            <mat-form-field class=\"example-full-width\">\r\n                <input type=\"email\" matInput placeholder=\"Email\" name=\"email\" [(ngModel)]=\"loginModel.email\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"example-full-width\">\r\n                <input type=\"password\" matInput placeholder=\"Password\" name=\"password\" [(ngModel)]=\"loginModel.password\">\r\n            </mat-form-field>\r\n        </mat-card-content>\r\n        <button mat-stroked-button color=\"accent\" class=\"btn-block\" (click)=\"loginUser()\">Log in</button>\r\n    </form>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { SecurityService } from '../core/services/security.service';\r\nimport { LoginModel } from '../core/services/security.models';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n    public loginModel: LoginModel = <LoginModel>{};\r\n\r\n    constructor(private securityService: SecurityService, private router: Router) {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    loginUser() {\r\n        this.securityService.login(this.loginModel).subscribe(token => {\r\n            this.router.navigate(['/fetch-data']);\r\n        });\r\n    }\r\n}\r\n","\r\n<p *ngIf=\"!movie\"><em>Loading...</em></p>\r\n\r\n<a [routerLink]=\"['/fetch-data']\" routerLinkActive=\"active\">Back</a>\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"movie\">\r\n    <tbody>\r\n        <tr>\r\n            <th>Title</th>\r\n            <td>{{ movie.title }}</td>\r\n            </tr>\r\n        <tr>\r\n            <th>Description</th>\r\n            <td>{{ movie.description }}</td>\r\n            </tr>\r\n        <tr>\r\n            <th>MovieUpKeepGenre</th>\r\n            <td>{{ movie.movieUpKeepGenre }}</td>\r\n            </tr>\r\n        <tr>\r\n            <th>DurationInMin</th>\r\n            <td>{{ movie.durationInMin }}</td>\r\n            </tr>\r\n        <tr>\r\n            <th>YearofRelease</th>\r\n            <td>{{ movie.yearOfRelease }}</td>\r\n            </tr>\r\n        <tr>\r\n            <th>Director</th>\r\n            <td>{{ movie.director }}</td>\r\n            </tr>\r\n        <tr>\r\n            <th>DateAdded</th>\r\n            <td>{{ movie.dateAdded }}</td>\r\n            </tr>\r\n        <tr>\r\n            <th>Rating</th>\r\n            <td>{{ movie.rating}}</td>\r\n            </tr>\r\n        <tr>\r\n            <th>WasWatched</th>\r\n            <td>{{ movie.wasWatched}}</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n<h2>Comments</h2>\r\n<table *ngIf=\"movie\">\r\n<thead>\r\n    <tr>\r\n    <th>Text</th>\r\n    <th>Important</th>\r\n    </tr>\r\n</thead>\r\n    <tr *ngFor=\"let comment of movie.comments\">\r\n        <td> {{ comment.text }}</td>\r\n        <td>{{ comment.important }}</td>\r\n        </tr>\r\n</table>\r\n<a [routerLink]=\"['/fetch-data']\" routerLinkActive=\"active\">Back</a>\r\n\r\n\r\n\r\n","import { Component, OnInit, Inject, Input } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-movie-details',\r\n  templateUrl: './movie-details.component.html',\r\n  styleUrls: ['./movie-details.component.css']\r\n})\r\nexport class MovieDetailsComponent implements OnInit {\r\n\r\n    public movie: MovieWithDetails;\r\n\r\n    constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string, private route: ActivatedRoute) {\r\n\r\n    }\r\n\r\n    loadMovie(movieId: string) {\r\n        this.http.get<MovieWithDetails>(this.baseUrl + 'api/Movies/' + movieId).subscribe(result => {\r\n            this.movie = result;\r\n            console.log(this.movie);\r\n        }, error => console.error(error));\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.route.paramMap.subscribe(params => {\r\n            this.loadMovie(params.get('movieId'));\r\n        })\r\n  }\r\n\r\n}\r\n\r\ninterface Comment {\r\n    text: string,\r\n    important: boolean\r\n}\r\n\r\ninterface MovieWithDetails\r\n {\r\n    Title: string;\r\n    Description: string;\r\n    MovieUpKeepGenre: string;\r\n    DurationInMin: number;\r\n    YearOfRelease: number;\r\n    Director: string;\r\n    DateAdded: Date;\r\n    Rating: number;\r\n    WasWatched: boolean;\r\n    Comments: Comment[];\r\n}\r\n","<header>\r\n  <nav\r\n    class=\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\"\r\n  >\r\n    <div class=\"container\">\r\n      <a class=\"navbar-brand\" [routerLink]=\"['/']\">AngularApplication</a>\r\n      <button\r\n        class=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\".navbar-collapse\"\r\n        aria-label=\"Toggle navigation\"\r\n        [attr.aria-expanded]=\"isExpanded\"\r\n        (click)=\"toggle()\"\r\n      >\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div\r\n        class=\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\"\r\n        [ngClass]=\"{ show: isExpanded }\"\r\n      >\r\n          <ul class=\"navbar-nav flex-grow\">\r\n              <li class=\"nav-item\"\r\n                  [routerLinkActive]=\"['link-active']\"\r\n                  [routerLinkActiveOptions]=\"{ exact: true }\">\r\n                  <a class=\"nav-link text-dark\" [routerLink]=\"['/']\">Home</a>\r\n              </li>\r\n\r\n              <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\r\n                  <a class=\"nav-link text-dark\" [routerLink]=\"['/counter']\">Counter</a>\r\n              </li>\r\n\r\n              <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\r\n                  <a class=\"nav-link text-dark\" [routerLink]=\"['/fetch-data']\">Fetch data</a>\r\n              </li>\r\n\r\n              <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\r\n                  <a class=\"nav-link text-dark\" [routerLink]=\"['/register']\">Register</a>\r\n              </li>\r\n              <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\r\n                  <a class=\"nav-link text-dark\" [routerLink]=\"['/login']\">Sign In</a>\r\n              </li>\r\n              <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\r\n                  <a class=\"nav-link text-dark\" [routerLink]=\"['/movies']\">Movies</a>\r\n              </li>\r\n              <li class=\"nav-item\" [routerLinkActive]=\"['link-active']\">\r\n                  <a class=\"nav-link text-dark\" [routerLink]=\"['/comments']\">Comments</a>\r\n              </li>\r\n          </ul>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n</header>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-menu',\r\n  templateUrl: './nav-menu.component.html',\r\n  styleUrls: ['./nav-menu.component.css']\r\n})\r\nexport class NavMenuComponent {\r\n  isExpanded = false;\r\n\r\n  collapse() {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n}\r\n","<mat-card>\r\n    <mat-card-header>\r\n        <mat-card-title>Register</mat-card-title>\r\n    </mat-card-header>\r\n\r\n    <form class=\"example-form\">\r\n\r\n        <mat-card-content>\r\n            <mat-form-field class=\"example-full-width\">\r\n                <input type=\"email\" matInput placeholder=\"Email\" name=\"email\" [(ngModel)]=\"registerModel.email\">\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"example-full-width\">\r\n                <input type=\"password\" matInput placeholder=\"Password\" name=\"password\" [(ngModel)]=\"registerModel.password\">\r\n            </mat-form-field>\r\n\r\n        </mat-card-content>\r\n\r\n        <button mat-stroked-button color=\"accent\" class=\"btn-block\" (click)=\"registerUser()\">Register</button>\r\n\r\n    </form>\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { SecurityService } from '../core/services/security.service';\r\nimport { RegisterModel } from '../core/services/security.models';\r\n\r\n@Component({\r\n    selector: 'app-registration',\r\n    templateUrl: './registration.component.html',\r\n    styleUrls: ['./registration.component.css']\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n\r\n    public registerModel: RegisterModel = <RegisterModel>{};\r\n\r\n    constructor(private securityService: SecurityService, private router: Router) {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    registerUser() {\r\n        this.securityService.register(this.registerModel).subscribe(token => {\r\n            this.router.navigate(['/fetch-data']);\r\n        });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {\r\n\r\n    MatSlideToggleModule,\r\n    MatSliderModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatBadgeModule,\r\n    MatListModule,\r\n    MatTableModule,\r\n    MatGridListModule,\r\n\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatChipsModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n\r\n    MatPaginatorModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    MatCardModule,\r\n\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        MatSlideToggleModule,\r\n        MatSliderModule,\r\n        MatToolbarModule,\r\n        MatSidenavModule,\r\n        MatBadgeModule,\r\n        MatListModule,\r\n        MatTableModule,\r\n        MatGridListModule,\r\n\r\n        MatFormFieldModule,\r\n        MatSelectModule,\r\n        MatRadioModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n        MatChipsModule,\r\n        MatInputModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatTooltipModule,\r\n\r\n        MatPaginatorModule,\r\n        MatProgressSpinnerModule,\r\n        MatProgressBarModule,\r\n        MatCardModule\r\n    ],\r\n    exports: [\r\n        MatSlideToggleModule,\r\n        MatSliderModule,\r\n        MatToolbarModule,\r\n        MatSidenavModule,\r\n        MatBadgeModule,\r\n        MatListModule,\r\n        MatTableModule,\r\n        MatGridListModule,\r\n\r\n        MatFormFieldModule,\r\n        MatSelectModule,\r\n        MatRadioModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n        MatChipsModule,\r\n        MatInputModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatTooltipModule,\r\n\r\n        MatPaginatorModule,\r\n        MatProgressSpinnerModule,\r\n        MatProgressBarModule,\r\n        MatCardModule\r\n    ],\r\n})\r\n\r\nexport class AngularMaterialModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\r\n\r\n"],"sourceRoot":"webpack:///"}